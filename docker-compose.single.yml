version: '3.8'

services:
  # Combined Frontend + Backend
  spotter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spotter_combined
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://spotter:spotter_secure_password@db:5432/spotter
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      DEBUG: 0
      DJANGO_SETTINGS_MODULE: config.settings
      ALLOWED_HOSTS: 0.0.0.0,127.0.0.1,localhost
      POSTGRES_DB: spotter
      POSTGRES_USER: spotter
      POSTGRES_PASSWORD: spotter_secure_password
    ports:
      - "80:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - ./backend/media:/home/app/web/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - spotter_network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: spotter_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: spotter
      POSTGRES_USER: spotter
      POSTGRES_PASSWORD: spotter_secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spotter -d spotter"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spotter_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: spotter_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spotter_network

volumes:
  postgres_data:
  static_volume:

networks:
  spotter_network:
    driver: bridge
