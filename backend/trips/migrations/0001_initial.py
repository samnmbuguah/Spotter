# Generated by Django 5.2.7 on 2025-10-03 17:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=500)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
            ],
            options={
                'unique_together': {('name', 'address')},
            },
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('stop_type', models.CharField(choices=[('rest', 'Rest Stop'), ('fuel', 'Fuel Stop'), ('pickup', 'Pickup'), ('dropoff', 'Drop-off')], max_length=20)),
                ('estimated_duration', models.IntegerField(help_text='Duration in minutes')),
                ('order', models.PositiveIntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.location')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Auto-generated trip name', max_length=255)),
                ('current_cycle', models.CharField(choices=[('70_8', '70 hours / 8 days'), ('60_7', '60 hours / 7 days')], default='70_8', max_length=10)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_distance', models.DecimalField(blank=True, decimal_places=2, help_text='Distance in miles', max_digits=8, null=True)),
                ('available_hours', models.DecimalField(decimal_places=2, default=70.0, max_digits=4)),
                ('used_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('last_reset_date', models.DateField(default=django.utils.timezone.now)),
                ('is_automatic', models.BooleanField(default=False, help_text='Automatically created trip')),
                ('trip_date', models.DateField(default=django.utils.timezone.now, help_text='Date this trip represents')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_trips', to='trips.location')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hos_trips', to=settings.AUTH_USER_MODEL)),
                ('dropoff_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dropoff_trips', to='trips.location')),
                ('pickup_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pickup_trips', to='trips.location')),
                ('route_stops', models.ManyToManyField(blank=True, to='trips.routestop')),
            ],
        ),
    ]
