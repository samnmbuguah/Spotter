# Generated by Django 5.2.7 on 2025-10-03 17:30

import core.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_driver', models.BooleanField(default=False)),
                ('is_dispatcher', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=core.models.document_upload_path)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('document_type', models.CharField(choices=[('inspection', 'Vehicle Inspection'), ('receipt', 'Receipt'), ('log', 'Log Sheet'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(blank=True, max_length=50)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('medical_card_expiry', models.DateField(blank=True, null=True)),
                ('current_vehicle', models.CharField(blank=True, max_length=100)),
                ('current_trailer', models.CharField(blank=True, max_length=100)),
                ('default_cycle', models.CharField(choices=[('70_8', '70 hours / 8 days'), ('60_7', '60 hours / 7 days')], default='70_8', max_length=10)),
                ('auto_close_trip_at_midnight', models.BooleanField(default=True, help_text='Automatically close current trip and start new one at midnight')),
                ('auto_close_trip_time', models.TimeField(default='00:00:00', help_text="Time to automatically close current trip (in driver's timezone)")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DutyStatusLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty', 'On Duty (Not Driving)')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('odometer_start', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('odometer_end', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vehicle_info', models.JSONField(default=dict)),
                ('trailer_info', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('vehicle_condition', models.CharField(blank=True, choices=[('satisfactory', 'Satisfactory'), ('needs_attention', 'Needs Attention'), ('unsafe', 'Unsafe to Drive')], max_length=20, null=True)),
                ('inspection_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('co_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='co_driver_logs', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(blank=True, to='core.document')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duty_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
    ]
